{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/src/components/Hand.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Hand = function Hand(_ref) {\n  var hand = _ref.hand,\n    rotation = _ref.rotation,\n    visible = _ref.visible,\n    spacing = _ref.spacing,\n    selectable = _ref.selectable,\n    selectedCard = _ref.selectedCard,\n    setSelectedCard = _ref.setSelectedCard;\n  if (rotation === undefined) {\n    rotation = 0;\n  }\n  if (visible === undefined) {\n    visible = true;\n  }\n  if (spacing === undefined) {\n    spacing = 30;\n  }\n  if (selectable === undefined) {\n    selectable = true;\n  }\n  var cardBack = require('../../assets/images/cards/card_back.png');\n  if (selectedCard === undefined) {\n    var _useState = useState(null);\n    var _useState2 = _slicedToArray(_useState, 2);\n    selectedCard = _useState2[0];\n    setSelectedCard = _useState2[1];\n  }\n  var numberOfCards = hand.length;\n  var handleCardPress = function handleCardPress(card) {\n    setSelectedCard(card);\n  };\n  if (visible === true && selectable) {\n    return _jsxDEV(View, {\n      style: [styles.handContainer, {\n        width: (numberOfCards - 1) * spacing + 120\n      }],\n      children: _jsxDEV(FlatList, {\n        horizontal: true,\n        data: hand,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleCardPress(item);\n            },\n            children: _jsxDEV(View, {\n              style: [styles.cardWrapper, selectedCard == item && styles.selectedCardWrapper, {\n                left: index * spacing\n              }],\n              children: _jsxDEV(Card, {\n                card: item,\n                visible: visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 27\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, _this);\n        },\n        contentContainerStyle: [styles.listContent, {\n          width: (numberOfCards - 1) * spacing + 100\n        }],\n        style: {\n          transform: [{\n            rotate: `${rotation}deg`\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, _this);\n  } else {\n    return _jsxDEV(View, {\n      style: [styles.handContainer, {\n        width: (numberOfCards - 1) * spacing + 100\n      }],\n      children: _jsxDEV(FlatList, {\n        horizontal: true,\n        data: hand,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsxDEV(View, {\n            style: [styles.cardWrapper, {\n              left: index * spacing\n            }],\n            children: _jsxDEV(Card, {\n              card: item,\n              visible: visible\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 23\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, _this);\n        },\n        contentContainerStyle: [styles.listContent, {\n          width: (numberOfCards - 1) * spacing + 100\n        }],\n        style: {\n          transform: [{\n            rotate: `${rotation}deg`\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, _this);\n  }\n};\nvar styles = StyleSheet.create({\n  handContainer: {\n    height: 170,\n    position: 'relative',\n    overflow: 'hidden',\n    justifyContent: 'flex-end',\n    width: 500\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  cardWrapper: {\n    position: 'absolute',\n    zIndex: 1,\n    transform: [{\n      translateY: -140\n    }]\n  },\n  listContent: {\n    height: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    paddingBottom: 10\n  },\n  selectedCardWrapper: {\n    borderWidth: 5,\n    borderColor: '#FFD700',\n    borderRadius: -5,\n    zIndex: 2,\n    transform: [{\n      translateY: -160\n    }]\n  }\n});\nexport default Hand;","map":{"version":3,"names":["React","useState","View","StyleSheet","FlatList","TouchableOpacity","Card","jsxDEV","_jsxDEV","Hand","_ref","hand","rotation","visible","spacing","selectable","selectedCard","setSelectedCard","undefined","cardBack","require","_useState","_useState2","_slicedToArray","numberOfCards","length","handleCardPress","card","style","styles","handContainer","width","children","horizontal","data","keyExtractor","item","id","renderItem","_ref2","index","onPress","cardWrapper","selectedCardWrapper","left","fileName","_jsxFileName","lineNumber","columnNumber","_this","contentContainerStyle","listContent","transform","rotate","_ref3","create","height","position","overflow","justifyContent","title","fontSize","fontWeight","marginBottom","textAlign","zIndex","translateY","flexDirection","alignItems","paddingBottom","borderWidth","borderColor","borderRadius"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/src/components/Hand.tsx"],"sourcesContent":["// Hand UI\nimport React, {useState} from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity } from 'react-native';\nimport Card from './Card';\nimport { CardInterface } from '../types';\n\nconst Hand: React.FC< {\n    hand: CardInterface[], // List of cards in the hand\n    rotation?: number,  // Optional rotation angle\n    visible?: boolean,  // Optional visibility state\n    spacing?: number, // Optional spacing\n    selectable?: boolean, // Optional selectable\n    selectedCard?: CardInterface | null,  // Optional selected card ID\n    setSelectedCard?: Function,  // Optional callback function to update selected card state\n  }> = ({ hand, rotation, visible, spacing, selectable, selectedCard, setSelectedCard }) => {\n    if (rotation === undefined) { \n      rotation = 0;  // Default rotation is 0 degrees if not provided\n    }\n    if (visible === undefined) { \n      visible = true;  // Default visibility is true if not provided\n    }\n    if (spacing === undefined) { \n      spacing = 30;  // Default spacing is 10 pixels if not provided\n    }\n    if (selectable === undefined) { \n      selectable = true;  // Default selectable is true if not provided\n    }\n\n    const cardBack = require('../../assets/images/cards/card_back.png');\n    if (selectedCard === undefined) { \n      // console.warn('No selectedCard provided, using first card in hand');\n      [selectedCard, setSelectedCard] = useState<CardInterface | null>(null);\n    }\n    const numberOfCards = hand.length;\n    const handleCardPress = (card: CardInterface) => {\n        setSelectedCard(card);\n    };\n\n    if (visible === true && selectable) {\n      return (\n          <View style={[styles.handContainer, {width: (numberOfCards-1) * spacing + 120}]}>    \n              <FlatList horizontal={true}\n              data={hand}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item, index }) => (\n                  <TouchableOpacity onPress={() => handleCardPress(item)}>\n                      <View style={[styles.cardWrapper, \n                      selectedCard == item && styles.selectedCardWrapper,\n                      {left: index * spacing,}]}>\n                          <Card \n                              card={item}\n                              visible={visible}\n                          />\n                      </View>\n                  </TouchableOpacity>\n              )}\n              contentContainerStyle={[styles.listContent, {width: (numberOfCards-1) * spacing + 100}]}\n              style={{ transform: [{ rotate: `${rotation}deg` }] }}\n              />\n          </View>\n      );\n    } else { \n      return (\n          <View style={[styles.handContainer, {width: (numberOfCards-1) * spacing + 100}]}>\n              <FlatList horizontal={true}\n              data={hand}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item, index }) => (\n                  <View style={[styles.cardWrapper, \n                  {left: index * spacing,}]}>\n                      <Card \n                          card={item}\n                          visible={visible}\n                      />\n                  </View>\n              )}\n              contentContainerStyle={[styles.listContent, {width: (numberOfCards-1) * spacing + 100}]}\n              style={{ transform: [{ rotate: `${rotation}deg` }] }}\n              />\n          </View>\n      );\n    }\n}\n\nconst styles = StyleSheet.create({\n    handContainer: {\n      height: 170, // Match card height\n      position: 'relative', // Allow absolute positioning of cards\n      overflow: 'hidden', // Hide overflowing cards\n      justifyContent: 'flex-end', // Align cards to the bottom\n      width: 500,\n    },\n    title: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      marginBottom: 16,\n      textAlign: 'center',\n    },\n    cardWrapper: {\n      position: 'absolute', // Allow overlapping\n      zIndex: 1, // Ensure overlapping is in order of the cards\n      transform: [{ translateY: -140 }],\n    },\n    listContent: {\n      height: '100%',\n      flexDirection: 'row',\n      alignItems: 'flex-end', // Aligns cards to the bottom of the container\n      paddingBottom: 10, // Adds spacing from the bottom\n    },\n    selectedCardWrapper: {\n        borderWidth: 5,\n        borderColor: '#FFD700', // Highlight color (gold in this case)\n        borderRadius: -5,\n        zIndex: 2, // Ensure selected card is above other cards\n        transform: [{ translateY: -160 }],\n    },\n});\n\nexport default Hand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}