{"ast":null,"code":"\"use strict\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"state\",\"screen\",\"params\",\"initial\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import{EnsureSingleNavigator}from\"./EnsureSingleNavigator.js\";import{NavigationFocusedRouteStateContext}from\"./NavigationFocusedRouteStateContext.js\";import{NavigationStateContext}from\"./NavigationStateContext.js\";import{StaticContainer}from\"./StaticContainer.js\";import{useOptionsGetters}from\"./useOptionsGetters.js\";import{jsx as _jsx}from\"react/jsx-runtime\";export function SceneView(_ref){var screen=_ref.screen,route=_ref.route,navigation=_ref.navigation,routeState=_ref.routeState,getState=_ref.getState,setState=_ref.setState,options=_ref.options,clearOptions=_ref.clearOptions;var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var _useOptionsGetters=useOptionsGetters({key:route.key,options:options,navigation:navigation}),addOptionsGetter=_useOptionsGetters.addOptionsGetter;var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var getCurrentState=React.useCallback(function(){var state=getState();var currentRoute=state.routes.find(function(r){return r.key===route.key;});return currentRoute?currentRoute.state:undefined;},[getState,route.key]);var setCurrentState=React.useCallback(function(child){var state=getState();setState(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r){if(r.key!==route.key){return r;}var nextRoute=_objectSpread(_objectSpread({},r),{},{state:child});if(nextRoute.params&&('state'in nextRoute.params&&typeof nextRoute.params.state==='object'&&nextRoute.params.state!==null||'screen'in nextRoute.params&&typeof nextRoute.params.screen==='string')){var _nextRoute$params=nextRoute.params,_state=_nextRoute$params.state,_screen=_nextRoute$params.screen,params=_nextRoute$params.params,initial=_nextRoute$params.initial,rest=_objectWithoutProperties(_nextRoute$params,_excluded);if(Object.keys(rest).length){nextRoute.params=rest;}else{delete nextRoute.params;}}return nextRoute;})}));},[getState,route.key,setState]);var isInitialRef=React.useRef(true);React.useEffect(function(){isInitialRef.current=false;});React.useEffect(function(){return clearOptions;},[]);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var parentFocusedRouteState=React.useContext(NavigationFocusedRouteStateContext);var focusedRouteState=React.useMemo(function(){var state={routes:[{key:route.key,name:route.name,params:route.params,path:route.path}]};var _addState=function addState(parent){var parentRoute=parent==null?void 0:parent.routes[0];if(parentRoute){return{routes:[_objectSpread(_objectSpread({},parentRoute),{},{state:_addState(parentRoute.state)})]};}return state;};return _addState(parentFocusedRouteState);},[parentFocusedRouteState,route.key,route.name,route.params,route.path]);var context=React.useMemo(function(){return{state:routeState,getState:getCurrentState,setState:setCurrentState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[routeState,getCurrentState,setCurrentState,getKey,setKey,getIsInitial,addOptionsGetter]);var ScreenComponent=screen.getComponent?screen.getComponent():screen.component;return _jsx(NavigationStateContext.Provider,{value:context,children:_jsx(NavigationFocusedRouteStateContext.Provider,{value:focusedRouteState,children:_jsx(EnsureSingleNavigator,{children:_jsx(StaticContainer,{name:screen.name,render:ScreenComponent||screen.children,navigation:navigation,route:route,children:ScreenComponent!==undefined?_jsx(ScreenComponent,{navigation:navigation,route:route}):screen.children!==undefined?screen.children({navigation:navigation,route:route}):null})})})});}","map":{"version":3,"names":["React","EnsureSingleNavigator","NavigationFocusedRouteStateContext","NavigationStateContext","StaticContainer","useOptionsGetters","jsx","_jsx","SceneView","_ref","screen","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","useRef","getKey","useCallback","current","_useOptionsGetters","key","addOptionsGetter","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","_objectSpread","map","nextRoute","params","_nextRoute$params","initial","rest","_objectWithoutProperties","_excluded","Object","keys","length","isInitialRef","useEffect","getIsInitial","parentFocusedRouteState","useContext","focusedRouteState","useMemo","name","path","addState","parent","parentRoute","context","ScreenComponent","getComponent","component","Provider","value","children","render"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/SceneView.tsx"],"sourcesContent":["import type {\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { EnsureSingleNavigator } from './EnsureSingleNavigator';\nimport {\n  type FocusedRouteState,\n  NavigationFocusedRouteStateContext,\n} from './NavigationFocusedRouteStateContext';\nimport { NavigationStateContext } from './NavigationStateContext';\nimport { StaticContainer } from './StaticContainer';\nimport type { NavigationProp, RouteConfigComponent } from './types';\nimport { useOptionsGetters } from './useOptionsGetters';\n\ntype Props<State extends NavigationState, ScreenOptions extends {}> = {\n  screen: RouteConfigComponent<ParamListBase, string> & { name: string };\n  navigation: NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions\n  >;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n  clearOptions: () => void;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {},\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n  clearOptions,\n}: Props<State, ScreenOptions>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) => {\n          if (r.key !== route.key) {\n            return r;\n          }\n\n          const nextRoute = { ...r, state: child };\n\n          // Before updating the state, cleanup any nested screen and state\n          // This will avoid the navigator trying to handle them again\n          if (\n            nextRoute.params &&\n            (('state' in nextRoute.params &&\n              typeof nextRoute.params.state === 'object' &&\n              nextRoute.params.state !== null) ||\n              ('screen' in nextRoute.params &&\n                typeof nextRoute.params.screen === 'string'))\n          ) {\n            // @ts-expect-error: we don't have correct type for params\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { state, screen, params, initial, ...rest } =\n              nextRoute.params;\n\n            if (Object.keys(rest).length) {\n              nextRoute.params = rest;\n            } else {\n              delete nextRoute.params;\n            }\n          }\n\n          return nextRoute;\n        }),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const parentFocusedRouteState = React.useContext(\n    NavigationFocusedRouteStateContext\n  );\n\n  const focusedRouteState = React.useMemo(() => {\n    const state: FocusedRouteState = {\n      routes: [\n        {\n          key: route.key,\n          name: route.name,\n          params: route.params,\n          path: route.path,\n        },\n      ],\n    };\n\n    // Add our state to the innermost route of the parent state\n    const addState = (\n      parent: FocusedRouteState | undefined\n    ): FocusedRouteState => {\n      const parentRoute = parent?.routes[0];\n\n      if (parentRoute) {\n        return {\n          routes: [\n            {\n              ...parentRoute,\n              state: addState(parentRoute.state),\n            },\n          ],\n        };\n      }\n\n      return state;\n    };\n\n    return addState(parentFocusedRouteState);\n  }, [\n    parentFocusedRouteState,\n    route.key,\n    route.name,\n    route.params,\n    route.path,\n  ]);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <NavigationFocusedRouteStateContext.Provider value={focusedRouteState}>\n        <EnsureSingleNavigator>\n          <StaticContainer\n            name={screen.name}\n            render={ScreenComponent || screen.children}\n            navigation={navigation}\n            route={route}\n          >\n            {ScreenComponent !== undefined ? (\n              <ScreenComponent navigation={navigation} route={route} />\n            ) : screen.children !== undefined ? (\n              screen.children({ navigation, route })\n            ) : null}\n          </StaticContainer>\n        </EnsureSingleNavigator>\n      </NavigationFocusedRouteStateContext.Provider>\n    </NavigationStateContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}