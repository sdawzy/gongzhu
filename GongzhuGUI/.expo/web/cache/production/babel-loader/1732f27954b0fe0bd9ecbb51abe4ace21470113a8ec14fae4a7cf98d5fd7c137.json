{"ast":null,"code":"\"use strict\";import*as React from'react';import useLatestCallback from'use-latest-callback';import{deepFreeze}from\"./deepFreeze.js\";var createStore=function createStore(getInitialState){var listeners=[];var initialized=false;var state;var getState=function getState(){if(initialized){return state;}initialized=true;state=deepFreeze(getInitialState());return state;};var isBatching=false;var didUpdate=false;var setState=function setState(newState){state=deepFreeze(newState);didUpdate=true;if(!isBatching){listeners.forEach(function(listener){return listener();});}};var subscribe=function subscribe(callback){listeners.push(callback);return function(){var index=listeners.indexOf(callback);if(index>-1){listeners.splice(index,1);}};};var batchUpdates=function batchUpdates(callback){isBatching=true;callback();isBatching=false;if(didUpdate){didUpdate=false;listeners.forEach(function(listener){return listener();});}};return{getState:getState,setState:setState,batchUpdates:batchUpdates,subscribe:subscribe};};export function useSyncState(getInitialState){var store=React.useRef(createStore(getInitialState)).current;var state=React.useSyncExternalStore(store.subscribe,store.getState,store.getState);React.useDebugValue(state);var pendingUpdatesRef=React.useRef([]);var scheduleUpdate=useLatestCallback(function(callback){pendingUpdatesRef.current.push(callback);});var flushUpdates=useLatestCallback(function(){var pendingUpdates=pendingUpdatesRef.current;pendingUpdatesRef.current=[];if(pendingUpdates.length!==0){store.batchUpdates(function(){for(var update of pendingUpdates){update();}});}});return{state:state,getState:store.getState,setState:store.setState,scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates};}","map":{"version":3,"names":["React","useLatestCallback","deepFreeze","createStore","getInitialState","listeners","initialized","state","getState","isBatching","didUpdate","setState","newState","forEach","listener","subscribe","callback","push","index","indexOf","splice","batchUpdates","useSyncState","store","useRef","current","useSyncExternalStore","useDebugValue","pendingUpdatesRef","scheduleUpdate","flushUpdates","pendingUpdates","length","update"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/useSyncState.tsx"],"sourcesContent":["import * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { deepFreeze } from './deepFreeze';\n\nconst createStore = <T,>(getInitialState: () => T) => {\n  const listeners: (() => void)[] = [];\n\n  let initialized = false;\n  let state: T;\n\n  const getState = () => {\n    if (initialized) {\n      return state;\n    }\n\n    initialized = true;\n    state = deepFreeze(getInitialState());\n\n    return state;\n  };\n\n  let isBatching = false;\n  let didUpdate = false;\n\n  const setState = (newState: T) => {\n    state = deepFreeze(newState);\n    didUpdate = true;\n\n    if (!isBatching) {\n      listeners.forEach((listener) => listener());\n    }\n  };\n\n  const subscribe = (callback: () => void) => {\n    listeners.push(callback);\n\n    return () => {\n      const index = listeners.indexOf(callback);\n\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n\n  const batchUpdates = (callback: () => void) => {\n    isBatching = true;\n    callback();\n    isBatching = false;\n\n    if (didUpdate) {\n      didUpdate = false;\n      listeners.forEach((listener) => listener());\n    }\n  };\n\n  return {\n    getState,\n    setState,\n    batchUpdates,\n    subscribe,\n  };\n};\n\nexport function useSyncState<T>(getInitialState: () => T) {\n  const store = React.useRef(createStore(getInitialState)).current;\n\n  const state = React.useSyncExternalStore(\n    store.subscribe,\n    store.getState,\n    store.getState\n  );\n\n  React.useDebugValue(state);\n\n  const pendingUpdatesRef = React.useRef<(() => void)[]>([]);\n\n  const scheduleUpdate = useLatestCallback((callback: () => void) => {\n    pendingUpdatesRef.current.push(callback);\n  });\n\n  const flushUpdates = useLatestCallback(() => {\n    const pendingUpdates = pendingUpdatesRef.current;\n\n    pendingUpdatesRef.current = [];\n\n    if (pendingUpdates.length !== 0) {\n      store.batchUpdates(() => {\n        // Flush all the pending updates\n        for (const update of pendingUpdates) {\n          update();\n        }\n      });\n    }\n  });\n\n  return {\n    state,\n    getState: store.getState,\n    setState: store.setState,\n    scheduleUpdate,\n    flushUpdates,\n  } as const;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}