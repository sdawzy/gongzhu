{"ast":null,"code":"\"use strict\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _toPropertyKey(t){var i=_toPrimitive(t,\"string\");return\"symbol\"==typeof i?i:i+\"\";}function _toPrimitive(t,r){if(\"object\"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||\"default\");if(\"object\"!=typeof i)return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(\"string\"===r?String:Number)(t);}import*as React from'react';import{NavigationBuilderContext}from\"./NavigationBuilderContext.js\";import{NavigationContext}from\"./NavigationContext.js\";import{NavigationRouteContext}from\"./NavigationRouteContext.js\";import{SceneView}from\"./SceneView.js\";import{ThemeContext}from\"./theming/ThemeContext.js\";import{useNavigationCache}from\"./useNavigationCache.js\";import{useRouteCache}from\"./useRouteCache.js\";import{jsx as _jsx}from\"react/jsx-runtime\";export function useDescriptors(_ref){var state=_ref.state,screens=_ref.screens,navigation=_ref.navigation,screenOptions=_ref.screenOptions,screenLayout=_ref.screenLayout,onAction=_ref.onAction,getState=_ref.getState,setState=_ref.setState,addListener=_ref.addListener,addKeyedListener=_ref.addKeyedListener,onRouteFocus=_ref.onRouteFocus,router=_ref.router,emitter=_ref.emitter;var theme=React.useContext(ThemeContext);var _React$useState=React.useState({}),_React$useState2=_slicedToArray(_React$useState,2),options=_React$useState2[0],setOptions=_React$useState2[1];var _React$useContext=React.useContext(NavigationBuilderContext),onDispatchAction=_React$useContext.onDispatchAction,onOptionsChange=_React$useContext.onOptionsChange,scheduleUpdate=_React$useContext.scheduleUpdate,flushUpdates=_React$useContext.flushUpdates,stackRef=_React$useContext.stackRef;var context=React.useMemo(function(){return{navigation:navigation,onAction:onAction,addListener:addListener,addKeyedListener:addKeyedListener,onRouteFocus:onRouteFocus,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange,scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates,stackRef:stackRef};},[navigation,onAction,addListener,addKeyedListener,onRouteFocus,onDispatchAction,onOptionsChange,scheduleUpdate,flushUpdates,stackRef]);var _useNavigationCache=useNavigationCache({state:state,getState:getState,navigation:navigation,setOptions:setOptions,router:router,emitter:emitter}),base=_useNavigationCache.base,navigations=_useNavigationCache.navigations;var routes=useRouteCache(state.routes);var getOptions=function getOptions(route,navigation,overrides){var config=screens[route.name];var screen=config.props;var optionsList=[screenOptions].concat(_toConsumableArray(config.options?config.options.filter(Boolean):[]),[screen.options,overrides]);return optionsList.reduce(function(acc,curr){return Object.assign(acc,typeof curr!=='function'?curr:curr({route:route,navigation:navigation,theme:theme}));},{});};var render=function render(route,navigation,customOptions,routeState){var _ref2,_screen$layout;var config=screens[route.name];var screen=config.props;var clearOptions=function clearOptions(){return setOptions(function(o){if(route.key in o){var _route$key=route.key,_=o[_route$key],rest=_objectWithoutProperties(o,[_route$key].map(_toPropertyKey));return rest;}return o;});};var layout=(_ref2=(_screen$layout=screen.layout)!=null?_screen$layout:config.layout)!=null?_ref2:screenLayout;var element=_jsx(SceneView,{navigation:navigation,route:route,screen:screen,routeState:routeState,getState:getState,setState:setState,options:customOptions,clearOptions:clearOptions});if(layout!=null){element=layout({route:route,navigation:navigation,theme:theme,children:element});}return _jsx(NavigationBuilderContext.Provider,{value:context,children:_jsx(NavigationContext.Provider,{value:navigation,children:_jsx(NavigationRouteContext.Provider,{value:route,children:element})})},route.key);};var descriptors=routes.reduce(function(acc,route,i){var navigation=navigations[route.key];var customOptions=getOptions(route,navigation,options[route.key]);var element=render(route,navigation,customOptions,state.routes[i].state);acc[route.key]={route:route,navigation:navigation,render:function render(){return element;},options:customOptions};return acc;},{});var describe=function describe(route,placeholder){if(!placeholder){if(!(route.key in descriptors)){throw new Error(`Couldn't find a route with the key ${route.key}.`);}return descriptors[route.key];}var navigation=base;var customOptions=getOptions(route,navigation,{});var element=render(route,navigation,customOptions,undefined);return{route:route,navigation:navigation,render:function render(){return element;},options:customOptions};};return{describe:describe,descriptors:descriptors};}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationContext","NavigationRouteContext","SceneView","ThemeContext","useNavigationCache","useRouteCache","jsx","_jsx","useDescriptors","_ref","state","screens","navigation","screenOptions","screenLayout","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","theme","useContext","_React$useState","useState","_React$useState2","_slicedToArray","options","setOptions","_React$useContext","onDispatchAction","onOptionsChange","scheduleUpdate","flushUpdates","stackRef","context","useMemo","_useNavigationCache","base","navigations","routes","getOptions","route","overrides","config","name","screen","props","optionsList","concat","_toConsumableArray","filter","Boolean","reduce","acc","curr","Object","assign","render","customOptions","routeState","_ref2","_screen$layout","clearOptions","o","key","_route$key","_","rest","_objectWithoutProperties","map","_toPropertyKey","layout","element","children","Provider","value","descriptors","i","describe","placeholder","Error","undefined"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/useDescriptors.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport {\n  type AddKeyedListener,\n  type AddListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport { NavigationContext } from './NavigationContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport { SceneView } from './SceneView';\nimport { ThemeContext } from './theming/ThemeContext';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { useNavigationCache } from './useNavigationCache';\nimport { useRouteCache } from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  layout: ScreenLayout | undefined;\n  props: RouteConfig<\n    ParamListBase,\n    string,\n    State,\n    ScreenOptions,\n    EventMap,\n    unknown\n  >;\n};\n\ntype ScreenLayout = (props: {\n  route: RouteProp<ParamListBase, string>;\n  navigation: any;\n  theme: ReactNavigation.Theme;\n  children: React.ReactElement;\n}) => React.ReactElement;\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n      theme: ReactNavigation.Theme;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions: ScreenOptionsOrCallback<ScreenOptions> | undefined;\n  screenLayout: ScreenLayout | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  screenLayout,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const theme = React.useContext(ThemeContext);\n  const [options, setOptions] = React.useState<Record<string, ScreenOptions>>(\n    {}\n  );\n  const {\n    onDispatchAction,\n    onOptionsChange,\n    scheduleUpdate,\n    flushUpdates,\n    stackRef,\n  } = React.useContext(NavigationBuilderContext);\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      scheduleUpdate,\n      flushUpdates,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      scheduleUpdate,\n      flushUpdates,\n      stackRef,\n    ]\n  );\n\n  const { base, navigations } = useNavigationCache<\n    State,\n    ScreenOptions,\n    EventMap,\n    ActionHelpers\n  >({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  const getOptions = (\n    route: RouteProp<ParamListBase, string>,\n    navigation: NavigationProp<\n      ParamListBase,\n      string,\n      string | undefined,\n      State,\n      ScreenOptions,\n      EventMap\n    >,\n    overrides: Record<string, ScreenOptions>\n  ) => {\n    const config = screens[route.name];\n    const screen = config.props;\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      overrides,\n    ];\n\n    return optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          // @ts-expect-error: we check for function but TS still complains\n          typeof curr !== 'function' ? curr : curr({ route, navigation, theme })\n        ),\n      {} as ScreenOptions\n    );\n  };\n\n  const render = (\n    route: RouteProp<ParamListBase, string>,\n    navigation: NavigationProp<\n      ParamListBase,\n      string,\n      string | undefined,\n      State,\n      ScreenOptions,\n      EventMap\n    >,\n    customOptions: ScreenOptions,\n    routeState: NavigationState | PartialState<NavigationState> | undefined\n  ) => {\n    const config = screens[route.name];\n    const screen = config.props;\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    const layout =\n      // The `layout` prop passed to `Screen` elements,\n      screen.layout ??\n      // The `screenLayout` props passed to `Group` elements\n      config.layout ??\n      // The default `screenLayout` passed to the navigator\n      screenLayout;\n\n    let element = (\n      <SceneView\n        navigation={navigation}\n        route={route}\n        screen={screen}\n        routeState={routeState}\n        getState={getState}\n        setState={setState}\n        options={customOptions}\n        clearOptions={clearOptions}\n      />\n    );\n\n    if (layout != null) {\n      element = layout({\n        route,\n        navigation,\n        // @ts-expect-error: in practice `theme` will be defined\n        theme,\n        children: element,\n      });\n    }\n\n    return (\n      <NavigationBuilderContext.Provider key={route.key} value={context}>\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            {element}\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      </NavigationBuilderContext.Provider>\n    );\n  };\n\n  const descriptors = routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const navigation = navigations[route.key];\n    const customOptions = getOptions(route, navigation, options[route.key]);\n    const element = render(\n      route,\n      navigation,\n      customOptions,\n      state.routes[i].state\n    );\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return element;\n      },\n      options: customOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n\n  /**\n   * Create a descriptor object for a route.\n   *\n   * @param route Route object for which the descriptor should be created\n   * @param placeholder Whether the descriptor should be a placeholder, e.g. for a route not yet in the state\n   * @returns Descriptor object\n   */\n  const describe = (route: RouteProp<ParamListBase>, placeholder: boolean) => {\n    if (!placeholder) {\n      if (!(route.key in descriptors)) {\n        throw new Error(`Couldn't find a route with the key ${route.key}.`);\n      }\n\n      return descriptors[route.key];\n    }\n\n    const navigation = base;\n    const customOptions = getOptions(route, navigation, {});\n    const element = render(route, navigation, customOptions, undefined);\n\n    return {\n      route,\n      navigation,\n      render() {\n        return element;\n      },\n      options: customOptions as ScreenOptions,\n    };\n  };\n\n  return {\n    describe,\n    descriptors,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}