{"ast":null,"code":"\"use strict\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"screen\",\"params\",\"action\",\"href\"],_excluded2=[\"variant\",\"color\",\"android_ripple\",\"style\",\"children\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{useLinkProps,useTheme}from'@react-navigation/native';import Color from'color';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{PlatformPressable}from\"./PlatformPressable.js\";import{Text}from\"./Text.js\";import{jsx as _jsx}from\"react/jsx-runtime\";var BUTTON_RADIUS=40;export function Button(props){if('screen'in props||'action'in props){return _jsx(ButtonLink,_objectSpread({},props));}else{return _jsx(ButtonBase,_objectSpread({},props));}}function ButtonLink(_ref){var screen=_ref.screen,params=_ref.params,action=_ref.action,href=_ref.href,rest=_objectWithoutProperties(_ref,_excluded);var props=useLinkProps({screen:screen,params:params,action:action,href:href});return _jsx(ButtonBase,_objectSpread(_objectSpread({},rest),props));}function ButtonBase(_ref2){var _ref2$variant=_ref2.variant,variant=_ref2$variant===void 0?'tinted':_ref2$variant,customColor=_ref2.color,android_ripple=_ref2.android_ripple,style=_ref2.style,children=_ref2.children,rest=_objectWithoutProperties(_ref2,_excluded2);var _useTheme=useTheme(),colors=_useTheme.colors,fonts=_useTheme.fonts;var color=customColor!=null?customColor:colors.primary;var backgroundColor;var textColor;switch(variant){case'plain':backgroundColor='transparent';textColor=color;break;case'tinted':backgroundColor=Color(color).fade(0.85).string();textColor=color;break;case'filled':backgroundColor=color;textColor=Color(color).isDark()?'white':Color(color).darken(0.71).string();break;}return _jsx(PlatformPressable,_objectSpread(_objectSpread({},rest),{},{android_ripple:_objectSpread({radius:BUTTON_RADIUS,color:Color(textColor).fade(0.85).string()},android_ripple),pressOpacity:\"web\"==='ios'?undefined:1,hoverEffect:{color:textColor},style:[{backgroundColor:backgroundColor},styles.button,style],children:_jsx(Text,{style:[{color:textColor},fonts.regular,styles.text],children:children})}));}var styles=StyleSheet.create({button:{paddingHorizontal:24,paddingVertical:10,borderRadius:BUTTON_RADIUS},text:{fontSize:14,lineHeight:20,letterSpacing:0.1,textAlign:'center'}});","map":{"version":3,"names":["useLinkProps","useTheme","Color","React","Platform","StyleSheet","PlatformPressable","Text","jsx","_jsx","BUTTON_RADIUS","Button","props","ButtonLink","_objectSpread","ButtonBase","_ref","screen","params","action","href","rest","_objectWithoutProperties","_excluded","_ref2","_ref2$variant","variant","customColor","color","android_ripple","style","children","_excluded2","_useTheme","colors","fonts","primary","backgroundColor","textColor","fade","string","isDark","darken","radius","pressOpacity","undefined","hoverEffect","styles","button","regular","text","create","paddingHorizontal","paddingVertical","borderRadius","fontSize","lineHeight","letterSpacing","textAlign"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/elements/src/Button.tsx"],"sourcesContent":["import {\n  type LinkProps,\n  useLinkProps,\n  useTheme,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport {\n  PlatformPressable,\n  type Props as PlatformPressableProps,\n} from './PlatformPressable';\nimport { Text } from './Text';\n\ntype ButtonBaseProps = Omit<PlatformPressableProps, 'children'> & {\n  variant?: 'plain' | 'tinted' | 'filled';\n  color?: string;\n  children: string | string[];\n};\n\ntype ButtonLinkProps<ParamList extends ReactNavigation.RootParamList> =\n  LinkProps<ParamList> & Omit<ButtonBaseProps, 'onPress'>;\n\nconst BUTTON_RADIUS = 40;\n\nexport function Button<ParamList extends ReactNavigation.RootParamList>(\n  props: ButtonLinkProps<ParamList>\n): React.JSX.Element;\n\nexport function Button(props: ButtonBaseProps): React.JSX.Element;\n\nexport function Button<ParamList extends ReactNavigation.RootParamList>(\n  props: ButtonBaseProps | ButtonLinkProps<ParamList>\n) {\n  if ('screen' in props || 'action' in props) {\n    // @ts-expect-error: This is already type-checked by the prop types\n    return <ButtonLink {...props} />;\n  } else {\n    return <ButtonBase {...props} />;\n  }\n}\n\nfunction ButtonLink<ParamList extends ReactNavigation.RootParamList>({\n  screen,\n  params,\n  action,\n  href,\n  ...rest\n}: ButtonLinkProps<ParamList>) {\n  // @ts-expect-error: This is already type-checked by the prop types\n  const props = useLinkProps({ screen, params, action, href });\n\n  return <ButtonBase {...rest} {...props} />;\n}\n\nfunction ButtonBase({\n  variant = 'tinted',\n  color: customColor,\n  android_ripple,\n  style,\n  children,\n  ...rest\n}: ButtonBaseProps) {\n  const { colors, fonts } = useTheme();\n\n  const color = customColor ?? colors.primary;\n\n  let backgroundColor;\n  let textColor;\n\n  switch (variant) {\n    case 'plain':\n      backgroundColor = 'transparent';\n      textColor = color;\n      break;\n    case 'tinted':\n      backgroundColor = Color(color).fade(0.85).string();\n      textColor = color;\n      break;\n    case 'filled':\n      backgroundColor = color;\n      textColor = Color(color).isDark()\n        ? 'white'\n        : Color(color).darken(0.71).string();\n      break;\n  }\n\n  return (\n    <PlatformPressable\n      {...rest}\n      android_ripple={{\n        radius: BUTTON_RADIUS,\n        color: Color(textColor).fade(0.85).string(),\n        ...android_ripple,\n      }}\n      pressOpacity={Platform.OS === 'ios' ? undefined : 1}\n      hoverEffect={{ color: textColor }}\n      style={[{ backgroundColor }, styles.button, style]}\n    >\n      <Text style={[{ color: textColor }, fonts.regular, styles.text]}>\n        {children}\n      </Text>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    borderRadius: BUTTON_RADIUS,\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0.1,\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}