{"ast":null,"code":"\"use strict\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{CommonActions,findFocusedRoute,getActionFromState,getPathFromState,getStateFromPath,NavigationHelpersContext,NavigationRouteContext,useStateForPath}from'@react-navigation/core';import*as React from'react';import{LinkingContext}from\"./LinkingContext.js\";export function useLinkBuilder(){var _options$getPathFromS,_options$getStateFrom,_options$getActionFro;var navigation=React.useContext(NavigationHelpersContext);var route=React.useContext(NavigationRouteContext);var _React$useContext=React.useContext(LinkingContext),options=_React$useContext.options;var focusedRouteState=useStateForPath();var getPathFromStateHelper=(_options$getPathFromS=options==null?void 0:options.getPathFromState)!=null?_options$getPathFromS:getPathFromState;var getStateFromPathHelper=(_options$getStateFrom=options==null?void 0:options.getStateFromPath)!=null?_options$getStateFrom:getStateFromPath;var getActionFromStateHelper=(_options$getActionFro=options==null?void 0:options.getActionFromState)!=null?_options$getActionFro:getActionFromState;var buildHref=React.useCallback(function(name,params){var _findFocusedRoute;if((options==null?void 0:options.enabled)===false){return undefined;}var isScreen=navigation&&route!=null&&route.key&&focusedRouteState?route.key===((_findFocusedRoute=findFocusedRoute(focusedRouteState))==null?void 0:_findFocusedRoute.key)&&navigation.getState().routes.some(function(r){return r.key===route.key;}):false;var stateForRoute={routes:[{name:name,params:params}]};var _constructState=function constructState(state){if(state){var _route=state.routes[0];if(isScreen&&!_route.state){return stateForRoute;}return{routes:[_objectSpread(_objectSpread({},_route),{},{state:_constructState(_route.state)})]};}return stateForRoute;};var state=_constructState(focusedRouteState);var path=getPathFromStateHelper(state,options==null?void 0:options.config);return path;},[options==null?void 0:options.enabled,options==null?void 0:options.config,route==null?void 0:route.key,navigation,focusedRouteState,getPathFromStateHelper]);var buildAction=React.useCallback(function(href){if(!href.startsWith('/')){throw new Error(`The href must start with '/' (${href}).`);}var state=getStateFromPathHelper(href,options==null?void 0:options.config);if(state){var action=getActionFromStateHelper(state,options==null?void 0:options.config);return action!=null?action:CommonActions.reset(state);}else{throw new Error('Failed to parse the href to a navigation state.');}},[options==null?void 0:options.config,getStateFromPathHelper,getActionFromStateHelper]);return{buildHref:buildHref,buildAction:buildAction};}","map":{"version":3,"names":["CommonActions","findFocusedRoute","getActionFromState","getPathFromState","getStateFromPath","NavigationHelpersContext","NavigationRouteContext","useStateForPath","React","LinkingContext","useLinkBuilder","_options$getPathFromS","_options$getStateFrom","_options$getActionFro","navigation","useContext","route","_React$useContext","options","focusedRouteState","getPathFromStateHelper","getStateFromPathHelper","getActionFromStateHelper","buildHref","useCallback","name","params","_findFocusedRoute","enabled","undefined","isScreen","key","getState","routes","some","r","stateForRoute","constructState","state","_objectSpread","path","config","buildAction","href","startsWith","Error","action","reset"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/native/src/useLinkBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  findFocusedRoute,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationHelpersContext,\n  NavigationRouteContext,\n  useStateForPath,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport { LinkingContext } from './LinkingContext';\n\ntype MinimalState = {\n  routes: [{ name: string; params?: object; state?: MinimalState }];\n};\n\n/**\n * Helpers to build href or action based on the linking options.\n *\n * @returns `buildHref` to build an `href` for screen and `buildAction` to build an action from an `href`.\n */\nexport function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const route = React.useContext(NavigationRouteContext);\n\n  const { options } = React.useContext(LinkingContext);\n\n  const focusedRouteState = useStateForPath();\n\n  const getPathFromStateHelper = options?.getPathFromState ?? getPathFromState;\n  const getStateFromPathHelper = options?.getStateFromPath ?? getStateFromPath;\n  const getActionFromStateHelper =\n    options?.getActionFromState ?? getActionFromState;\n\n  const buildHref = React.useCallback(\n    (name: string, params?: object) => {\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      // Check that we're inside:\n      // - navigator's context\n      // - route context of the navigator (could be a screen, tab, etc.)\n      // - route matches the state for path (from the screen's context)\n      // This ensures that we're inside a screen\n      const isScreen =\n        navigation && route?.key && focusedRouteState\n          ? route.key === findFocusedRoute(focusedRouteState)?.key &&\n            navigation.getState().routes.some((r) => r.key === route.key)\n          : false;\n\n      const stateForRoute: MinimalState = {\n        routes: [{ name, params }],\n      };\n\n      const constructState = (\n        state: MinimalState | undefined\n      ): MinimalState => {\n        if (state) {\n          const route = state.routes[0];\n\n          // If we're inside a screen and at the innermost route\n          // We need to replace the state with the provided one\n          // This assumes that we're navigating to a sibling route\n          if (isScreen && !route.state) {\n            return stateForRoute;\n          }\n\n          // Otherwise, dive into the nested state of the route\n          return {\n            routes: [\n              {\n                ...route,\n                state: constructState(route.state),\n              },\n            ],\n          };\n        }\n\n        // Once there is no more nested state, we're at the innermost route\n        // We can add a state based on provided parameters\n        // This assumes that we're navigating to a child of this route\n        // In this case, the helper is used in a navigator for its routes\n        return stateForRoute;\n      };\n\n      const state = constructState(focusedRouteState);\n      const path = getPathFromStateHelper(state, options?.config);\n\n      return path;\n    },\n    [\n      options?.enabled,\n      options?.config,\n      route?.key,\n      navigation,\n      focusedRouteState,\n      getPathFromStateHelper,\n    ]\n  );\n\n  const buildAction = React.useCallback(\n    (href: string) => {\n      if (!href.startsWith('/')) {\n        throw new Error(`The href must start with '/' (${href}).`);\n      }\n\n      const state = getStateFromPathHelper(href, options?.config);\n\n      if (state) {\n        const action = getActionFromStateHelper(state, options?.config);\n\n        return action ?? CommonActions.reset(state);\n      } else {\n        throw new Error('Failed to parse the href to a navigation state.');\n      }\n    },\n    [options?.config, getStateFromPathHelper, getActionFromStateHelper]\n  );\n\n  return {\n    buildHref,\n    buildAction,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}