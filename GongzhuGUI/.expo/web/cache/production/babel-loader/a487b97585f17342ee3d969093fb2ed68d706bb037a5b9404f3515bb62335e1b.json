{"ast":null,"code":"\"use strict\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import{NavigationContext}from\"./NavigationContext.js\";import{PrivateValueStore}from\"./types.js\";import{UnhandledActionContext}from\"./UnhandledActionContext.js\";PrivateValueStore;export function useNavigationHelpers(_ref){var navigatorId=_ref.id,onAction=_ref.onAction,_getState=_ref.getState,emitter=_ref.emitter,router=_ref.router,stateRef=_ref.stateRef;var onUnhandledAction=React.useContext(UnhandledActionContext);var parentNavigationHelpers=React.useContext(NavigationContext);return React.useMemo(function(){var dispatch=function dispatch(op){var action=typeof op==='function'?op(_getState()):op;var handled=onAction(action);if(!handled){onUnhandledAction==null?void 0:onUnhandledAction(action);}};var actions=_objectSpread(_objectSpread({},router.actionCreators),CommonActions);var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){return dispatch(actions[name].apply(actions,arguments));};return acc;},{});var navigationHelpers=_objectSpread(_objectSpread(_objectSpread({},parentNavigationHelpers),helpers),{},{dispatch:dispatch,emit:emitter.emit,isFocused:parentNavigationHelpers?parentNavigationHelpers.isFocused:function(){return true;},canGoBack:function canGoBack(){var state=_getState();return router.getStateForAction(state,CommonActions.goBack(),{routeNames:state.routeNames,routeParamList:{},routeGetIdList:{}})!==null||(parentNavigationHelpers==null?void 0:parentNavigationHelpers.canGoBack())||false;},getId:function getId(){return navigatorId;},getParent:function getParent(id){if(id!==undefined){var current=navigationHelpers;while(current&&id!==current.getId()){current=current.getParent();}return current;}return parentNavigationHelpers;},getState:function getState(){if(stateRef.current!=null){return stateRef.current;}return _getState();}});return navigationHelpers;},[router,parentNavigationHelpers,emitter.emit,_getState,onAction,onUnhandledAction,navigatorId,stateRef]);}","map":{"version":3,"names":["CommonActions","React","NavigationContext","PrivateValueStore","UnhandledActionContext","useNavigationHelpers","_ref","navigatorId","id","onAction","getState","emitter","router","stateRef","onUnhandledAction","useContext","parentNavigationHelpers","useMemo","dispatch","op","action","handled","actions","_objectSpread","actionCreators","helpers","Object","keys","reduce","acc","name","apply","arguments","navigationHelpers","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getId","getParent","undefined","current"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/useNavigationHelpers.tsx"],"sourcesContent":["import {\n  CommonActions,\n  type NavigationAction,\n  type NavigationState,\n  type ParamListBase,\n  type Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { NavigationContext } from './NavigationContext';\nimport { type NavigationHelpers, PrivateValueStore } from './types';\nimport { UnhandledActionContext } from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  id: string | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n  stateRef: React.RefObject<State | null>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>,\n>({\n  id: navigatorId,\n  onAction,\n  getState,\n  emitter,\n  router,\n  stateRef,\n}: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = (...args: any) => dispatch(actions[name](...args));\n      return acc;\n    }, {} as ActionHelpers);\n\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getId: () => navigatorId,\n      getParent: (id?: string) => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState: (): State => {\n        // FIXME: Workaround for when the state is read during render\n        // By this time, we haven't committed the new state yet\n        // Without this `useSyncExternalStore` will keep reading the old state\n        // This may result in `useNavigationState` or `useIsFocused` returning wrong values\n        // Apart from `useSyncExternalStore`, `getState` should never be called during render\n        if (stateRef.current != null) {\n          return stateRef.current;\n        }\n\n        return getState();\n      },\n    } as NavigationHelpers<ParamListBase, EventMap> & ActionHelpers;\n\n    return navigationHelpers;\n  }, [\n    router,\n    parentNavigationHelpers,\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    navigatorId,\n    stateRef,\n  ]);\n}\n"],"mappings":"4rBAAA,OACEA,aAAa,KAKR,2BAA2B,CAClC,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAE9B,OAASC,iBAAiB,KAAQ,wBAAqB,CACvD,OAAiCC,iBAAiB,KAAQ,YAAS,CACnE,OAASC,sBAAsB,KAAQ,6BAA0B,CAKjED,iBAAiB,CAejB,MAAO,SAAS,CAAAE,oBAAoBA,CAAAC,IAAA,CAYT,IANrB,CAAAC,WAAW,CAAAD,IAAA,CAAfE,EAAE,CACFC,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CACRC,SAAQ,CAAAJ,IAAA,CAARI,QAAQ,CACRC,OAAO,CAAAL,IAAA,CAAPK,OAAO,CACPC,MAAM,CAAAN,IAAA,CAANM,MAAM,CACNC,QAAA,CAAAP,IAAA,CAAAO,QAAA,CAEA,GAAM,CAAAC,iBAAiB,CAAGb,KAAK,CAACc,UAAU,CAACX,sBAAsB,CAAC,CAClE,GAAM,CAAAY,uBAAuB,CAAGf,KAAK,CAACc,UAAU,CAACb,iBAAiB,CAAC,CAEnE,MAAO,CAAAD,KAAK,CAACgB,OAAO,CAAC,UAAM,CACzB,GAAM,CAAAC,QAAQ,CAAI,QAAZ,CAAAA,QAAQA,CAAIC,EAAuC,CAAK,CAC5D,GAAM,CAAAC,MAAM,CAAG,MAAO,CAAAD,EAAE,GAAK,UAAU,CAAGA,EAAE,CAACT,SAAQ,CAAC,CAAC,CAAC,CAAGS,EAAE,CAE7D,GAAM,CAAAE,OAAO,CAAGZ,QAAQ,CAACW,MAAM,CAAC,CAEhC,GAAI,CAACC,OAAO,CAAE,CACZP,iBAAiB,cAAjBA,iBAAiB,CAAGM,MAAM,CAAC,CAC7B,CACF,CAAC,CAED,GAAM,CAAAE,OAAO,CAAAC,aAAA,CAAAA,aAAA,IACRX,MAAM,CAACY,cAAc,EACrBxB,aAAA,CACJ,CAED,GAAM,CAAAyB,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,MAAM,CAAC,SAACC,GAAG,CAAEC,IAAI,CAAK,CAEzDD,GAAG,CAACC,IAAI,CAAC,CAAG,iBAAkB,CAAAZ,QAAQ,CAACI,OAAO,CAACQ,IAAI,CAAC,CAAAC,KAAA,CAAbT,OAAO,CAAAU,SAAc,CAAC,CAAC,GAC9D,MAAO,CAAAH,GAAG,CACZ,CAAC,CAAE,CAAC,CAAkB,CAAC,CAEvB,GAAM,CAAAI,iBAAiB,CAAAV,aAAA,CAAAA,aAAA,CAAAA,aAAA,IAClBP,uBAAuB,EACvBS,OAAO,MACVP,QAAQ,CAARA,QAAQ,CACRgB,IAAI,CAAEvB,OAAO,CAACuB,IAAI,CAClBC,SAAS,CAAEnB,uBAAuB,CAC9BA,uBAAuB,CAACmB,SAAS,CACjC,iBAAM,KAAI,GACdC,SAAS,CAAE,QAAX,CAAAA,SAASA,CAAA,CAAQ,CACf,GAAM,CAAAC,KAAK,CAAG3B,SAAQ,CAAC,CAAC,CAExB,MACE,CAAAE,MAAM,CAAC0B,iBAAiB,CAACD,KAAK,CAAErC,aAAa,CAACuC,MAAM,CAAC,CAAC,CAAY,CAChEC,UAAU,CAAEH,KAAK,CAACG,UAAU,CAC5BC,cAAc,CAAE,CAAC,CAAC,CAClBC,cAAc,CAAE,CAAC,CACnB,CAAC,CAAC,GAAK,IAAI,GACX1B,uBAAuB,cAAvBA,uBAAuB,CAAEoB,SAAS,CAAC,CAAC,GACpC,KAAK,CAET,CAAC,CACDO,KAAK,CAAE,QAAP,CAAAA,KAAKA,CAAA,QAAQ,CAAApC,WAAW,GACxBqC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAGpC,EAAW,CAAK,CAC1B,GAAIA,EAAE,GAAKqC,SAAS,CAAE,CACpB,GAAI,CAAAC,OAAO,CAAGb,iBAAiB,CAE/B,MAAOa,OAAO,EAAItC,EAAE,GAAKsC,OAAO,CAACH,KAAK,CAAC,CAAC,CAAE,CACxCG,OAAO,CAAGA,OAAO,CAACF,SAAS,CAAC,CAAC,CAC/B,CAEA,MAAO,CAAAE,OAAO,CAChB,CAEA,MAAO,CAAA9B,uBAAuB,CAChC,CAAC,CACDN,QAAQ,CAAE,QAAV,CAAAA,QAAQA,CAAA,CAAe,CAMrB,GAAIG,QAAQ,CAACiC,OAAO,EAAI,IAAI,CAAE,CAC5B,MAAO,CAAAjC,QAAQ,CAACiC,OAAO,CACzB,CAEA,MAAO,CAAApC,SAAQ,CAAC,CAAC,CACnB,GAC6D,CAE/D,MAAO,CAAAuB,iBAAiB,CAC1B,CAAC,CAAE,CACDrB,MAAM,CACNI,uBAAuB,CACvBL,OAAO,CAACuB,IAAI,CACZxB,SAAQ,CACRD,QAAQ,CACRK,iBAAiB,CACjBP,WAAW,CACXM,QAAQ,CACT,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}