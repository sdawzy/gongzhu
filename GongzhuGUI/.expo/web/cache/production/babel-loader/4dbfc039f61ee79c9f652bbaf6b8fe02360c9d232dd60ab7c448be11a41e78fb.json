{"ast":null,"code":"\"use strict\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as queryString from'query-string';import{getPatternParts}from\"./getPatternParts.js\";import{validatePathConfig}from\"./validatePathConfig.js\";var _getActiveRoute=function getActiveRoute(state){var route=typeof state.index==='number'?state.routes[state.index]:state.routes[state.routes.length-1];if(route.state){return _getActiveRoute(route.state);}return route;};var cachedNormalizedConfigs=new WeakMap();var getNormalizedConfigs=function getNormalizedConfigs(options){if(!(options!=null&&options.screens))return{};var cached=cachedNormalizedConfigs.get(options==null?void 0:options.screens);if(cached)return cached;var normalizedConfigs=createNormalizedConfigs(options.screens);cachedNormalizedConfigs.set(options.screens,normalizedConfigs);return normalizedConfigs;};export function getPathFromState(state,options){if(state==null){throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);}if(options){validatePathConfig(options);}var configs=getNormalizedConfigs(options);var path='/';var current=state;var allParams={};var _loop=function _loop(){var index=typeof current.index==='number'?current.index:0;var route=current.routes[index];var parts;var focusedParams;var currentOptions=configs;var focusedRoute=_getActiveRoute(state);var nestedRouteNames=[];var hasNext=true;var _loop2=function _loop2(){parts=currentOptions[route.name].parts;nestedRouteNames.push(route.name);if(route.params){var _parts2;var _options=currentOptions[route.name];var currentParams=Object.fromEntries(Object.entries(route.params).map(function(_ref4){var _options$stringify$ke,_options$stringify;var _ref5=_slicedToArray(_ref4,2),key=_ref5[0],value=_ref5[1];if(value===undefined){if(_options){var _options$parts,_options$parts$find;var optional=(_options$parts=_options.parts)==null?void 0:(_options$parts$find=_options$parts.find(function(part){return part.param===key;}))==null?void 0:_options$parts$find.optional;if(optional){return null;}}else{return null;}}var stringify=(_options$stringify$ke=_options==null?void 0:(_options$stringify=_options.stringify)==null?void 0:_options$stringify[key])!=null?_options$stringify$ke:String;return[key,stringify(value)];}).filter(function(entry){return entry!=null;}));if((_parts2=parts)!=null&&_parts2.length){Object.assign(allParams,currentParams);}if(focusedRoute===route){var _parts3;focusedParams=_objectSpread({},currentParams);(_parts3=parts)==null?void 0:_parts3.forEach(function(_ref6){var param=_ref6.param;if(param){if(focusedParams){delete focusedParams[param];}}});}}if(!currentOptions[route.name].screens||route.state===undefined){hasNext=false;}else{index=typeof route.state.index==='number'?route.state.index:route.state.routes.length-1;var nextRoute=route.state.routes[index];var nestedConfig=currentOptions[route.name].screens;if(nestedConfig&&nextRoute.name in nestedConfig){route=nextRoute;currentOptions=nestedConfig;}else{hasNext=false;}}};while(route.name in currentOptions&&hasNext){_loop2();}if(currentOptions[route.name]!==undefined){var _parts;path+=(_parts=parts)==null?void 0:_parts.map(function(_ref){var segment=_ref.segment,param=_ref.param,optional=_ref.optional;if(segment==='*'){return route.name;}if(param){var value=allParams[param];if(value===undefined&&optional){return'';}return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g,function(char){return encodeURIComponent(char);});}return encodeURIComponent(segment);}).join('/');}else{path+=encodeURIComponent(route.name);}if(!focusedParams&&focusedRoute.params){focusedParams=Object.fromEntries(Object.entries(focusedRoute.params).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];return[key,String(value)];}));}if(route.state){path+='/';}else if(focusedParams){for(var param in focusedParams){if(focusedParams[param]==='undefined'){delete focusedParams[param];}}var query=queryString.stringify(focusedParams,{sort:false});if(query){path+=`?${query}`;}}current=route.state;};while(current){_loop();}if(options!=null&&options.path){path=`${options.path}/${path}`;}path=path.replace(/\\/+/g,'/');path=path.length>1?path.replace(/\\/$/,''):path;if(!path.startsWith('/')){path=`/${path}`;}return path;}var createConfigItem=function createConfigItem(config,parentParts){if(typeof config==='string'){var _parts4=getPatternParts(config);if(parentParts){return{parts:[].concat(_toConsumableArray(parentParts),_toConsumableArray(_parts4))};}return{parts:_parts4};}if(config.exact&&config.path===undefined){throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");}var parts=config.exact!==true?[].concat(_toConsumableArray(parentParts||[]),_toConsumableArray(config.path?getPatternParts(config.path):[])):config.path?getPatternParts(config.path):undefined;var screens=config.screens?createNormalizedConfigs(config.screens,parts):undefined;return{parts:parts,stringify:config.stringify,screens:screens};};var createNormalizedConfigs=function createNormalizedConfigs(options,parts){return Object.fromEntries(Object.entries(options).map(function(_ref7){var _ref8=_slicedToArray(_ref7,2),name=_ref8[0],c=_ref8[1];var result=createConfigItem(c,parts);return[name,result];}));};","map":{"version":3,"names":["queryString","getPatternParts","validatePathConfig","getActiveRoute","state","route","index","routes","length","cachedNormalizedConfigs","WeakMap","getNormalizedConfigs","options","screens","cached","get","normalizedConfigs","createNormalizedConfigs","set","getPathFromState","Error","String","configs","path","current","allParams","_loop","parts","focusedParams","currentOptions","focusedRoute","nestedRouteNames","hasNext","_loop2","name","push","params","_parts2","currentParams","Object","fromEntries","entries","map","_ref4","_options$stringify$ke","_options$stringify","_ref5","_slicedToArray","key","value","undefined","_options$parts","_options$parts$find","optional","find","part","param","stringify","filter","entry","assign","_parts3","_objectSpread","forEach","_ref6","nextRoute","nestedConfig","_parts","_ref","segment","replace","char","encodeURIComponent","join","_ref2","_ref3","query","sort","startsWith","createConfigItem","config","parentParts","concat","_toConsumableArray","exact","_ref7","_ref8","c","result"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/getPathFromState.tsx"],"sourcesContent":["import type {\n  NavigationState,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as queryString from 'query-string';\n\nimport { getPatternParts, type PatternPart } from './getPatternParts';\nimport type { PathConfig, PathConfigMap } from './types';\nimport { validatePathConfig } from './validatePathConfig';\n\ntype Options<ParamList extends {}> = {\n  path?: string;\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype State = NavigationState | Omit<PartialState<NavigationState>, 'stale'>;\n\ntype StringifyConfig = Record<string, (value: unknown) => string>;\n\ntype ConfigItem = {\n  parts?: PatternPart[];\n  stringify?: StringifyConfig;\n  screens?: Record<string, ConfigItem>;\n};\n\nconst getActiveRoute = (state: State): { name: string; params?: object } => {\n  const route =\n    typeof state.index === 'number'\n      ? state.routes[state.index]\n      : state.routes[state.routes.length - 1];\n\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n};\n\nconst cachedNormalizedConfigs = new WeakMap<\n  PathConfigMap<{}>,\n  Record<string, ConfigItem>\n>();\n\nconst getNormalizedConfigs = (options?: Options<{}>) => {\n  if (!options?.screens) return {};\n\n  const cached = cachedNormalizedConfigs.get(options?.screens);\n\n  if (cached) return cached;\n\n  const normalizedConfigs = createNormalizedConfigs(options.screens);\n\n  cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n\n  return normalizedConfigs;\n};\n\n/**\n * Utility to serialize a navigation state object to a path string.\n *\n * @example\n * ```js\n * getPathFromState(\n *   {\n *     routes: [\n *       {\n *         name: 'Chat',\n *         params: { author: 'Jane', id: 42 },\n *       },\n *     ],\n *   },\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         stringify: { author: author => author.toLowerCase() }\n *       }\n *     }\n *   }\n * )\n * ```\n *\n * @param state Navigation state to serialize.\n * @param options Extra options to fine-tune how to serialize the path.\n * @returns Path representing the state, e.g. /foo/bar?count=42.\n */\nexport function getPathFromState<ParamList extends {}>(\n  state: State,\n  options?: Options<ParamList>\n): string {\n  if (state == null) {\n    throw Error(\n      `Got '${String(state)}' for the navigation state. You must pass a valid state object.`\n    );\n  }\n\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  const configs = getNormalizedConfigs(options);\n\n  let path = '/';\n  let current: State | undefined = state;\n\n  const allParams: Record<string, string> = {};\n\n  while (current) {\n    let index = typeof current.index === 'number' ? current.index : 0;\n    let route = current.routes[index] as Route<string> & {\n      state?: State;\n    };\n\n    let parts: PatternPart[] | undefined;\n\n    let focusedParams: Record<string, string> | undefined;\n    let currentOptions = configs;\n\n    const focusedRoute = getActiveRoute(state);\n\n    // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n    const nestedRouteNames = [];\n\n    let hasNext = true;\n\n    while (route.name in currentOptions && hasNext) {\n      parts = currentOptions[route.name].parts;\n\n      nestedRouteNames.push(route.name);\n\n      if (route.params) {\n        const options = currentOptions[route.name];\n\n        const currentParams = Object.fromEntries(\n          Object.entries(route.params)\n            .map(([key, value]): [string, string] | null => {\n              if (value === undefined) {\n                if (options) {\n                  const optional = options.parts?.find(\n                    (part) => part.param === key\n                  )?.optional;\n\n                  if (optional) {\n                    return null;\n                  }\n                } else {\n                  return null;\n                }\n              }\n\n              const stringify = options?.stringify?.[key] ?? String;\n\n              return [key, stringify(value)];\n            })\n            .filter((entry) => entry != null)\n        );\n\n        if (parts?.length) {\n          Object.assign(allParams, currentParams);\n        }\n\n        if (focusedRoute === route) {\n          // If this is the focused route, keep the params for later use\n          // We save it here since it's been stringified already\n          focusedParams = { ...currentParams };\n\n          parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(({ param }) => {\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n        }\n      }\n\n      // If there is no `screens` property or no nested state, we return pattern\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index =\n          typeof route.state.index === 'number'\n            ? route.state.index\n            : route.state.routes.length - 1;\n\n        const nextRoute = route.state.routes[index];\n        const nestedConfig = currentOptions[route.name].screens;\n\n        // if there is config for next route name, we go deeper\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute as Route<string> & { state?: State };\n          currentOptions = nestedConfig;\n        } else {\n          // If not, there is no sense in going deeper in config\n          hasNext = false;\n        }\n      }\n    }\n\n    if (currentOptions[route.name] !== undefined) {\n      path += parts\n        ?.map(({ segment, param, optional }) => {\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            const value = allParams[param];\n\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(\n              /[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g,\n              (char) => encodeURIComponent(char)\n            );\n          }\n\n          return encodeURIComponent(segment);\n        })\n        .join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n\n    if (!focusedParams && focusedRoute.params) {\n      focusedParams = Object.fromEntries(\n        Object.entries(focusedRoute.params).map(([key, value]) => [\n          key,\n          String(value),\n        ])\n      );\n    }\n\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (const param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete focusedParams[param];\n        }\n      }\n\n      const query = queryString.stringify(focusedParams, { sort: false });\n\n      if (query) {\n        path += `?${query}`;\n      }\n    }\n\n    current = route.state;\n  }\n\n  // Include the root path if specified\n  if (options?.path) {\n    path = `${options.path}/${path}`;\n  }\n\n  // Remove multiple as well as trailing slashes\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n  // If path doesn't start with a slash, add it\n  // This makes sure that history.pushState will update the path correctly instead of appending\n  if (!path.startsWith('/')) {\n    path = `/${path}`;\n  }\n\n  return path;\n}\n\nconst createConfigItem = (\n  config: PathConfig<object> | string,\n  parentParts?: PatternPart[]\n): ConfigItem => {\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const parts = getPatternParts(config);\n\n    if (parentParts) {\n      return { parts: [...parentParts, ...parts] };\n    }\n\n    return { parts };\n  }\n\n  if (config.exact && config.path === undefined) {\n    throw new Error(\n      \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n    );\n  }\n\n  // If an object is specified as the value (e.g. Foo: { ... }),\n  // It can have `path` property and `screens` prop which has nested configs\n  const parts =\n    config.exact !== true\n      ? [\n          ...(parentParts || []),\n          ...(config.path ? getPatternParts(config.path) : []),\n        ]\n      : config.path\n        ? getPatternParts(config.path)\n        : undefined;\n\n  const screens = config.screens\n    ? createNormalizedConfigs(config.screens, parts)\n    : undefined;\n\n  return {\n    parts,\n    stringify: config.stringify,\n    screens,\n  };\n};\n\nconst createNormalizedConfigs = (\n  options: PathConfigMap<object>,\n  parts?: PatternPart[]\n): Record<string, ConfigItem> =>\n  Object.fromEntries(\n    Object.entries(options).map(([name, c]) => {\n      const result = createConfigItem(c, parts);\n\n      return [name, result];\n    })\n  );\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}