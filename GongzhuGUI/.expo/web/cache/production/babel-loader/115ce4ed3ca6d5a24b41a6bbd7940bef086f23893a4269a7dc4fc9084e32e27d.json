{"ast":null,"code":"\"use strict\";import*as React from'react';import{DeprecatedNavigationInChildContext}from\"./DeprecatedNavigationInChildContext.js\";import{NavigationBuilderContext}from\"./NavigationBuilderContext.js\";import{shouldPreventRemove,useOnPreventRemove}from\"./useOnPreventRemove.js\";export function useOnAction(_ref){var router=_ref.router,getState=_ref.getState,setState=_ref.setState,key=_ref.key,actionListeners=_ref.actionListeners,beforeRemoveListeners=_ref.beforeRemoveListeners,routerConfigOptions=_ref.routerConfigOptions,emitter=_ref.emitter;var _React$useContext=React.useContext(NavigationBuilderContext),onActionParent=_React$useContext.onAction,onRouteFocusParent=_React$useContext.onRouteFocus,addListenerParent=_React$useContext.addListener,onDispatchAction=_React$useContext.onDispatchAction;var navigationInChildEnabled=React.useContext(DeprecatedNavigationInChildContext);var routerConfigOptionsRef=React.useRef(routerConfigOptions);React.useEffect(function(){routerConfigOptionsRef.current=routerConfigOptions;});var onAction=React.useCallback(function(action){var visitedNavigators=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();var state=getState();if(visitedNavigators.has(state.key)){return false;}visitedNavigators.add(state.key);if(typeof action.target!=='string'||action.target===state.key){var result=router.getStateForAction(state,action,routerConfigOptionsRef.current);result=result===null&&action.target===state.key?state:result;if(result!==null){onDispatchAction(action,state===result);if(state!==result){var isPrevented=shouldPreventRemove(emitter,beforeRemoveListeners,state.routes,result.routes,action);if(isPrevented){return true;}setState(result);}if(onRouteFocusParent!==undefined){var shouldFocus=router.shouldActionChangeFocus(action);if(shouldFocus&&key!==undefined){onRouteFocusParent(key);}}return true;}}if(onActionParent!==undefined){if(onActionParent(action,visitedNavigators)){return true;}}if(typeof action.target==='string'||action.type==='NAVIGATE_DEPRECATED'||navigationInChildEnabled){for(var i=actionListeners.length-1;i>=0;i--){var listener=actionListeners[i];if(listener(action,visitedNavigators)){return true;}}}return false;},[actionListeners,beforeRemoveListeners,emitter,getState,navigationInChildEnabled,key,onActionParent,onDispatchAction,onRouteFocusParent,router,setState]);useOnPreventRemove({getState:getState,emitter:emitter,beforeRemoveListeners:beforeRemoveListeners});React.useEffect(function(){return addListenerParent==null?void 0:addListenerParent('action',onAction);},[addListenerParent,onAction]);return onAction;}","map":{"version":3,"names":["React","DeprecatedNavigationInChildContext","NavigationBuilderContext","shouldPreventRemove","useOnPreventRemove","useOnAction","_ref","router","getState","setState","key","actionListeners","beforeRemoveListeners","routerConfigOptions","emitter","_React$useContext","useContext","onActionParent","onAction","onRouteFocusParent","onRouteFocus","addListenerParent","addListener","onDispatchAction","navigationInChildEnabled","routerConfigOptionsRef","useRef","useEffect","current","useCallback","action","visitedNavigators","arguments","length","undefined","Set","state","has","add","target","result","getStateForAction","isPrevented","routes","shouldFocus","shouldActionChangeFocus","type","i","listener"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/useOnAction.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { DeprecatedNavigationInChildContext } from './DeprecatedNavigationInChildContext';\nimport {\n  type ChildActionListener,\n  type ChildBeforeRemoveListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { shouldPreventRemove, useOnPreventRemove } from './useOnPreventRemove';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n  const navigationInChildEnabled = React.useContext(\n    DeprecatedNavigationInChildContext\n  );\n\n  const routerConfigOptionsRef =\n    React.useRef<RouterConfigOptions>(routerConfigOptions);\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      if (\n        typeof action.target === 'string' ||\n        // For backward compatibility\n        action.type === 'NAVIGATE_DEPRECATED' ||\n        navigationInChildEnabled\n      ) {\n        // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n        // Handling this when target isn't specified is deprecated and will be removed in the future\n        for (let i = actionListeners.length - 1; i >= 0; i--) {\n          const listener = actionListeners[i];\n\n          if (listener(action, visitedNavigators)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      navigationInChildEnabled,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(\n    () => addListenerParent?.('action', onAction),\n    [addListenerParent, onAction]\n  );\n\n  return onAction;\n}\n"],"mappings":"aAOA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,kCAAkC,KAAQ,yCAAsC,CACzF,OAGEC,wBAAwB,KACnB,+BAA4B,CAGnC,OAASC,mBAAmB,CAAEC,kBAAkB,KAAQ,yBAAsB,CAsB9E,MAAO,SAAS,CAAAC,WAAWA,CAAAC,IAAA,CASf,IARV,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CACNC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CACRC,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CACRC,GAAG,CAAAJ,IAAA,CAAHI,GAAG,CACHC,eAAe,CAAAL,IAAA,CAAfK,eAAe,CACfC,qBAAqB,CAAAN,IAAA,CAArBM,qBAAqB,CACrBC,mBAAmB,CAAAP,IAAA,CAAnBO,mBAAmB,CACnBC,OAAA,CAAAR,IAAA,CAAAQ,OAAA,CAEA,IAAAC,iBAAA,CAKIf,KAAK,CAACgB,UAAU,CAACd,wBAAwB,CAAC,CAJlCe,cAAc,CAAAF,iBAAA,CAAxBG,QAAQ,CACMC,kBAAkB,CAAAJ,iBAAA,CAAhCK,YAAY,CACCC,iBAAiB,CAAAN,iBAAA,CAA9BO,WAAW,CACXC,gBAAA,CAAAR,iBAAA,CAAAQ,gBAAA,CAEF,GAAM,CAAAC,wBAAwB,CAAGxB,KAAK,CAACgB,UAAU,CAC/Cf,kCACF,CAAC,CAED,GAAM,CAAAwB,sBAAsB,CAC1BzB,KAAK,CAAC0B,MAAM,CAAsBb,mBAAmB,CAAC,CAExDb,KAAK,CAAC2B,SAAS,CAAC,UAAM,CACpBF,sBAAsB,CAACG,OAAO,CAAGf,mBAAmB,CACtD,CAAC,CAAC,CAEF,GAAM,CAAAK,QAAQ,CAAGlB,KAAK,CAAC6B,WAAW,CAChC,SACEC,MAAwB,CAErB,IADH,CAAAC,iBAA8B,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAI,CAAAG,GAAG,CAAS,CAAC,CAElD,GAAM,CAAAC,KAAK,CAAG5B,QAAQ,CAAC,CAAC,CAIxB,GAAIuB,iBAAiB,CAACM,GAAG,CAACD,KAAK,CAAC1B,GAAG,CAAC,CAAE,CACpC,MAAO,MAAK,CACd,CAEAqB,iBAAiB,CAACO,GAAG,CAACF,KAAK,CAAC1B,GAAG,CAAC,CAEhC,GAAI,MAAO,CAAAoB,MAAM,CAACS,MAAM,GAAK,QAAQ,EAAIT,MAAM,CAACS,MAAM,GAAKH,KAAK,CAAC1B,GAAG,CAAE,CACpE,GAAI,CAAA8B,MAAM,CAAGjC,MAAM,CAACkC,iBAAiB,CACnCL,KAAK,CACLN,MAAM,CACNL,sBAAsB,CAACG,OACzB,CAAC,CAIDY,MAAM,CACJA,MAAM,GAAK,IAAI,EAAIV,MAAM,CAACS,MAAM,GAAKH,KAAK,CAAC1B,GAAG,CAAG0B,KAAK,CAAGI,MAAM,CAEjE,GAAIA,MAAM,GAAK,IAAI,CAAE,CACnBjB,gBAAgB,CAACO,MAAM,CAAEM,KAAK,GAAKI,MAAM,CAAC,CAE1C,GAAIJ,KAAK,GAAKI,MAAM,CAAE,CACpB,GAAM,CAAAE,WAAW,CAAGvC,mBAAmB,CACrCW,OAAO,CACPF,qBAAqB,CACrBwB,KAAK,CAACO,MAAM,CACZH,MAAM,CAACG,MAAM,CACbb,MACF,CAAC,CAED,GAAIY,WAAW,CAAE,CACf,MAAO,KAAI,CACb,CAEAjC,QAAQ,CAAC+B,MAAM,CAAC,CAClB,CAEA,GAAIrB,kBAAkB,GAAKe,SAAS,CAAE,CAGpC,GAAM,CAAAU,WAAW,CAAGrC,MAAM,CAACsC,uBAAuB,CAACf,MAAM,CAAC,CAE1D,GAAIc,WAAW,EAAIlC,GAAG,GAAKwB,SAAS,CAAE,CACpCf,kBAAkB,CAACT,GAAG,CAAC,CACzB,CACF,CAEA,MAAO,KAAI,CACb,CACF,CAEA,GAAIO,cAAc,GAAKiB,SAAS,CAAE,CAEhC,GAAIjB,cAAc,CAACa,MAAM,CAAEC,iBAAiB,CAAC,CAAE,CAC7C,MAAO,KAAI,CACb,CACF,CAEA,GACE,MAAO,CAAAD,MAAM,CAACS,MAAM,GAAK,QAAQ,EAEjCT,MAAM,CAACgB,IAAI,GAAK,qBAAqB,EACrCtB,wBAAwB,CACxB,CAGA,IAAK,GAAI,CAAAuB,CAAC,CAAGpC,eAAe,CAACsB,MAAM,CAAG,CAAC,CAAEc,CAAC,EAAI,CAAC,CAAEA,CAAC,EAAE,CAAE,CACpD,GAAM,CAAAC,QAAQ,CAAGrC,eAAe,CAACoC,CAAC,CAAC,CAEnC,GAAIC,QAAQ,CAAClB,MAAM,CAAEC,iBAAiB,CAAC,CAAE,CACvC,MAAO,KAAI,CACb,CACF,CACF,CAEA,MAAO,MAAK,CACd,CAAC,CACD,CACEpB,eAAe,CACfC,qBAAqB,CACrBE,OAAO,CACPN,QAAQ,CACRgB,wBAAwB,CACxBd,GAAG,CACHO,cAAc,CACdM,gBAAgB,CAChBJ,kBAAkB,CAClBZ,MAAM,CACNE,QAAQ,CAEZ,CAAC,CAEDL,kBAAkB,CAAC,CACjBI,QAAQ,CAARA,QAAQ,CACRM,OAAO,CAAPA,OAAO,CACPF,qBAAA,CAAAA,qBACF,CAAC,CAAC,CAEFZ,KAAK,CAAC2B,SAAS,CACb,iBAAM,CAAAN,iBAAiB,cAAjBA,iBAAiB,CAAG,QAAQ,CAAEH,QAAQ,CAAC,GAC7C,CAACG,iBAAiB,CAAEH,QAAQ,CAC9B,CAAC,CAED,MAAO,CAAAA,QAAQ,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}