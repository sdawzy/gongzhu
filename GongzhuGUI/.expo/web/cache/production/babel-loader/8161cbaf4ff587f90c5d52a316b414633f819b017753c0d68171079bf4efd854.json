{"ast":null,"code":"\"use strict\";import*as React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var MULTIPLE_NAVIGATOR_ERROR=`Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;export var SingleNavigatorContext=React.createContext(undefined);export function EnsureSingleNavigator(_ref){var children=_ref.children;var navigatorKeyRef=React.useRef();var value=React.useMemo(function(){return{register:function register(key){var currentKey=navigatorKeyRef.current;if(currentKey!==undefined&&key!==currentKey){throw new Error(MULTIPLE_NAVIGATOR_ERROR);}navigatorKeyRef.current=key;},unregister:function unregister(key){var currentKey=navigatorKeyRef.current;if(key!==currentKey){return;}navigatorKeyRef.current=undefined;}};},[]);return _jsx(SingleNavigatorContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","jsx","_jsx","MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","createContext","undefined","EnsureSingleNavigator","_ref","children","navigatorKeyRef","useRef","value","useMemo","register","key","currentKey","current","Error","unregister","Provider"],"sources":["/Users/yuezhang/Documents/projects/gongzhu/GongzhuGUI/node_modules/@react-navigation/core/src/EnsureSingleNavigator.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n"],"mappings":"aAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAM/B,GAAM,CAAAC,wBAAwB,CAAG,oSAAoS,CAErU,MAAO,IAAM,CAAAC,sBAAsB,CAAGJ,KAAK,CAACK,aAAa,CAMvDC,SAAS,CAAC,CAKZ,MAAO,SAAS,CAAAC,qBAAqBA,CAAAC,IAAA,CAAsB,IAAnB,CAAAC,QAAA,CAAAD,IAAA,CAAAC,QAAA,CACtC,GAAM,CAAAC,eAAe,CAAGV,KAAK,CAACW,MAAM,CAAqB,CAAC,CAE1D,GAAM,CAAAC,KAAK,CAAGZ,KAAK,CAACa,OAAO,CACzB,iBAAO,CACLC,QAAQ,SAAR,CAAAA,QAAQA,CAACC,GAAW,CAAE,CACpB,GAAM,CAAAC,UAAU,CAAGN,eAAe,CAACO,OAAO,CAE1C,GAAID,UAAU,GAAKV,SAAS,EAAIS,GAAG,GAAKC,UAAU,CAAE,CAClD,KAAM,IAAI,CAAAE,KAAK,CAACf,wBAAwB,CAAC,CAC3C,CAEAO,eAAe,CAACO,OAAO,CAAGF,GAAG,CAC/B,CAAC,CACDI,UAAU,SAAV,CAAAA,UAAUA,CAACJ,GAAW,CAAE,CACtB,GAAM,CAAAC,UAAU,CAAGN,eAAe,CAACO,OAAO,CAE1C,GAAIF,GAAG,GAAKC,UAAU,CAAE,CACtB,OACF,CAEAN,eAAe,CAACO,OAAO,CAAGX,SAAS,CACrC,CACF,CAAC,EAAC,CACF,EACF,CAAC,CAED,MACE,CAAAJ,IAAA,CAACE,sBAAsB,CAACgB,QAAQ,EAACR,KAAK,CAAEA,KAAM,CAAAH,QAAA,CAC3CA,QAAQ,CACsB,CAAC,CAEtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}